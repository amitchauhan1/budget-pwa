{"version":3,"sources":["webpack:///src/app/UserComponent/progresspanel/progresspanel-routing.module.ts","webpack:///src/app/UserComponent/progresspanel/progresspanel.component.ts","webpack:///src/app/UserComponent/progresspanel/progresspanel.component.html","webpack:///src/app/UserComponent/progresspanel/progresspanel.module.ts"],"names":["routes","path","component","ProgresspanelRoutingModule","forChild","imports","exports","ProgresspanelComponent","route","_http","Router","EnDeService","loader","alert","formBuilder","planList","auth_detail","JSON","parse","localStorage","getItem","userPlan","data","user_plan","handler","ses_login","window","location","href","getAllPlan","link","service_url","getPlanList","access_token","form","FormData","headers","post","subscribe","res","result","success","hideLoader","showAlerts","message","err","error","plan_id","subscribePlan","append","url","selector","templateUrl","styleUrls","encapsulation","None","ProgresspanelModule","declarations"],"mappings":"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","file":"UserComponent-progresspanel-progresspanel-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProgresspanelComponent } from './progresspanel.component';\n\nconst routes: Routes = [{ path: '', component: ProgresspanelComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProgresspanelRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LoginComponent } from 'src/app/login/login.component';\nimport { ApiService } from 'src/app/_services/api-service';\nimport { alertsService, LoaderService, EnDeService } from '../../_helper';\nimport { environment } from '../../../environments/environment'\n\n@Component({\n  selector: 'app-progresspanel',\n  templateUrl: './progresspanel.component.html',\n  styleUrls: ['./progresspanel.component.scss',\n    '../../../assets/front/css/front-style.css',\n    '../../../assets/front/css/reset.min.css',\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class ProgresspanelComponent implements OnInit {\n  planList: any = [];\n  public auth_detail = JSON.parse(localStorage.getItem('ses_login_auth'));\n  userPlan = this.auth_detail.data.user_plan;\n // loadUrl: any;\n  transcation_detail: any;\n  handler: any = null;\n\n  constructor(private route: ActivatedRoute, private _http: HttpClient, private Router: Router, private EnDeService: EnDeService, private loader: LoaderService, private alert: alertsService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n  //  sessionStorage.setItem('plan_id', '1');\n    var ses_login = localStorage.getItem('ses_login_auth');\n    if (ses_login === null) {\n      window.location.href = '/sign-in';\n    }\n\n    this.getAllPlan();\n    // this.loadStripe();\n\n  }\n\n  getAllPlan() {\n    var link = ApiService.service_url + ApiService.getPlanList;\n    var access_token = this.auth_detail.data.access_token;\n    var form = new FormData();\n    const headers = { 'Authorization': 'Bearer ' + access_token };\n    this._http.post<any>(link, form, { headers }).subscribe((res) => {\n      var result = res;\n      if (result.success == true) {\n        this.loader.hideLoader();\n        this.planList = result.data;\n      } else if (result.success == false) {\n        this.alert.showAlerts(\"Error\", result.message, \"error\");\n      }\n    },\n      err => {\n        this.loader.hideLoader();\n        this.alert.showAlerts(\"Error\", err.error.message, \"error\");\n      }\n    );\n  }\n\n  selectPlanToSubscribe(plan_id){\n    var link = ApiService.service_url + ApiService.subscribePlan;\n    var access_token = this.auth_detail.data.access_token;\n    var form = new FormData();\n    form.append('plan_id', plan_id);\n    const headers = { 'Authorization': 'Bearer ' + access_token };\n    this._http.post<any>(link, form, { headers }).subscribe((res) => {\n      var result = res;\n      if (result.success == true) {\n        this.loader.hideLoader();\n        window.location.href = result.data.url;\n      } else if (result.success == false) {\n        this.alert.showAlerts(\"Error\", result.message, \"error\");\n      }\n    },\n      err => {\n        this.loader.hideLoader();\n        this.alert.showAlerts(\"Error\", err.error.message, \"error\");\n      }\n    );\n  }\n\n  // loadStripe() {\n  //   if (!window.document.getElementById('stripe-script')) {\n  //     var s = window.document.createElement(\"script\");\n  //     s.id = \"stripe-script\";\n  //     s.type = \"text/javascript\";\n  //     s.src = \"https://checkout.stripe.com/checkout.js\";\n  //     s.onload = () => {\n  //       this.handler = (<any>window).StripeCheckout.configure({\n  //         key: environment.stripe_key,\n  //         locale: 'pl',\n  //         currency: 'PLN',\n  //         theme: 'stripe',\n  //         token: function (token: any) {\n  //           // You can access the token ID with `token.id`.\n  //           // Get the token ID to your server-side code for use.\n  //           // console.log(token)\n  //         }\n  //       });\n  //     }\n\n  //     window.document.body.appendChild(s);\n  //   }\n  // }\n\n  // pay(amount) {\n  //   var handler = (<any>window).StripeCheckout.configure({\n  //     key: environment.stripe_key,\n  //     locale: 'pl',\n  //     currency: 'PLN',\n  //     theme: 'stripe',\n  //     token: function (token: any) {\n  //       // You can access the token ID with `token.id`.\n  //       // Get the token ID to your server-side code for use.\n  //       this.premiumPlan(token, amount);\n  //     }\n  //   });\n\n  //   handler.open({\n  //     name: 'Pay with card',\n  //     amount: amount * 1\n  //   });\n\n  // }\n\n  // premiumPlan(token, amount) {\n  //   console.log(token);\n  //   this.loader.showLoader();\n  //   var link = ApiService.service_url + ApiService.getSubExpenseData;\n  //   var form = new FormData();\n  //   form.append('token_id', token.id);\n  //   form.append('cardLastFourDigit', token.card.last4);\n  //   form.append('exp_month', token.card.exp_month);\n  //   form.append('exp_year',token.card.exp_year)\n  //   alert(token.card.card.last4);\n  //   // var access_token = this.auth_detail.data.access_token;\n  //   // const headers = { 'Authorization': 'Bearer ' + access_token };\n  //   // this._http.post<any>(link, form, { headers }).subscribe(\n  //   //   res => {\n  //   //     this.loader.hideLoader();\n  //   //     var result = res;\n  //   //     if (result.success == true) {\n  //   //       this.alert.showAlerts(\"Success\", result.message, \"success\");\n  //   //     } else if (result.success == false) {\n  //   //       this.alert.showAlerts(\"Error\", result.message, \"error\");\n  //   //     }\n  //   //   },\n  //   //   err => {\n  //   //     this.loader.hideLoader();\n  //   //     this.alert.showAlerts(\"Error\", err.error.message, \"error\");\n  //   //   }\n  //   // );\n  // }\n\n}\n\n","<div class=\"budzet watch-video w-100 d-inline-block align-top\" style=\"padding-left : 10.2rem;\">\n    <div class=\"container\">\n        <div class=\"main-row w-100 position-relative\">\n            <div class=\"col-md-12 ps-md-0\">\n                <div class=\"insights-bgcolor\">\n                    <div class=\"row align-items-end\">\n                        <div class=\"prising-table w-100 d-inline-block\">\n                            <h2 class=\"prising-table-title text-center\">Our Pricing Plans</h2>\n                            <div class=\"grid\">\n                                <div *ngFor=\"let data of planList\">\n                                    <div *ngIf=\"data.plan_type ==1\" class=\"card\">\n                                        <h2 class=\"card_title text-center m-0\">{{data.plan_name}}</h2>\n                                        <div class=\"border-prising\"></div>\n                                        <p class=\"pricing text-center\">{{data.amount |currency:'PLN ':'code'}}\n                                        </p>\n                                        <ul class=\"features list-unstyled freePlan\">\n                                            <div *ngFor=\"let feature of data.features\">\n                                                <li *ngIf=\"feature.selected == true\"><i\n                                                        class=\"fa fa-check-circle feature-checkicon\"></i>{{feature.features}}\n                                                </li>\n                                                <li *ngIf=\"feature.selected == false\"><i\n                                                        class=\"fa fa-times-circle feature-timesicon\"></i>{{feature.features}}\n                                                </li>\n                                            </div>\n                                        </ul>\n                                    </div>\n                                    <div *ngIf=\"data.plan_type ==2\" class=\"card position-relative\">\n                                        <div class=\"featured-ribbon\"><img src=\"/assets/front/img/star.png\"></div>\n                                        <h2 class=\"card_title text-center m-0\">{{data.plan_name}}</h2>\n                                        <div class=\"border-prising\"></div>\n                                        <p class=\"pricing text-center\">{{data.amount\n                                            |currency:'PLN ':'code'}}<span class=\"small\">/\n                                                {{data.month}} months</span>\n                                        </p>\n                                        <ul\n                                            class=\"{{userPlan==1 ? 'features list-unstyled' : 'features list-unstyled freePlan'}}\">\n                                            <div *ngFor=\"let feature of data.features\">\n                                                <li *ngIf=\"feature.selected == true\"><i\n                                                        class=\"fa fa-check-circle feature-checkicon\"></i>{{feature.features}}\n                                                </li>\n                                                <li *ngIf=\"feature.selected == false\"><i\n                                                        class=\"fa fa-times-circle feature-timesicon\"></i>{{feature.features}}\n                                                </li>\n                                            </div>\n                                        </ul>\n                                        <a (click)=\"selectPlanToSubscribe(data.plan_id)\" class=\"cta_btn\">Get\n                                            Started</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <footer class=\"footer footer-watchvideo w-100 d-inline-block\">\n                    <ul class=\"d-flex justify-content-center list-unstyled\">\n                        <li><a href=\"#\">Terms of Service</a><span class=\"border-shape\"></span></li>\n                        <li><a href=\"#\">Privacy Policy</a><span class=\"border-shape\"></span></li>\n                        <li><a routerLink=\"/app/contact-us\">Contact Us</a><span class=\"border-shape\"></span></li>\n                        <li><a href=\"#\">About Us</a><span class=\"border-shape\"></span></li>\n                        <li><a href=\"#\">Subscription</a></li>\n                    </ul>\n                    <p class=\"footer-bottom text-center mb-0\">Ⓒ StworzSwojBudzet, Inc. All Rights Reserved.</p>\n                </footer>\n            </div>\n\n\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProgresspanelRoutingModule } from './progresspanel-routing.module';\nimport { ProgresspanelComponent } from './progresspanel.component';\n\n\n@NgModule({\n  declarations: [ProgresspanelComponent],\n  imports: [\n    CommonModule,\n    ProgresspanelRoutingModule\n  ]\n})\nexport class ProgresspanelModule { }\n"]}